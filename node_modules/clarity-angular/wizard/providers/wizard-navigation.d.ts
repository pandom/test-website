import { OnDestroy, TemplateRef } from "@angular/core";
import { Observable } from "rxjs/Observable";
import { Subscription } from "rxjs/Subscription";
import { WizardPage } from "../wizard-page";
import { PageCollectionService } from "./page-collection";
import { ButtonHubService } from "./button-hub";
export declare class WizardNavigationService implements OnDestroy {
    pageCollection: PageCollectionService;
    buttonService: ButtonHubService;
    previousButtonSubscription: Subscription;
    nextButtonSubscription: Subscription;
    dangerButtonSubscription: Subscription;
    finishButtonSubscription: Subscription;
    customButtonSubscription: Subscription;
    cancelButtonSubscription: Subscription;
    pagesResetSubscription: Subscription;
    constructor(pageCollection: PageCollectionService, buttonService: ButtonHubService);
    ngOnDestroy(): void;
    private _currentChanged;
    readonly currentPageChanged: Observable<WizardPage>;
    currentPage: WizardPage;
    navServiceLoaded: boolean;
    readonly currentPageTitle: TemplateRef<any>;
    readonly currentPageIsFirst: boolean;
    readonly currentPageIsNextToLast: boolean;
    readonly currentPageIsLast: boolean;
    setCurrentPage(page: WizardPage): void;
    private _movedToNextPage;
    readonly movedToNextPage: Observable<boolean>;
    private _wizardFinished;
    readonly wizardFinished: Observable<boolean>;
    next(): void;
    forceNext(): void;
    checkAndCommitCurrentPage(buttonType: string): void;
    finish(): void;
    private _movedToPreviousPage;
    readonly movedToPreviousPage: Observable<boolean>;
    previous(): void;
    private _cancelWizard;
    readonly notifyWizardCancel: Observable<any>;
    cancel(): void;
    wizardHasAltCancel: boolean;
    wizardHasAltNext: boolean;
    goTo(pageToGoToOrId: any): void;
    setLastEnabledPageCurrent(): void;
    setFirstPageCurrent(): void;
    private _wizardGhostPageState;
    wizardGhostPageState: string;
    private _hideWizardGhostPages;
    hideWizardGhostPages: boolean;
    updateNavigation(): void;
}
