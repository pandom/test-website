/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, ElementRef, Input } from "@angular/core";
import { IfOpenService } from "../../utils/conditional/if-open.service";
import { Popover } from "./popover";
var PopoverDirective = (function () {
    function PopoverDirective(el, ifOpenService) {
        this.el = el;
        this.ifOpenService = ifOpenService;
        this.popoverOptions = {};
    }
    PopoverDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.ifOpenService.openChange.subscribe(function (change) {
            _this.updateView(change);
        });
    };
    PopoverDirective.prototype.updateView = function (open) {
        if (open) {
            this.createPopover();
        }
        else {
            this.destroyPopover();
        }
    };
    PopoverDirective.prototype.createPopover = function () {
        var _this = this;
        // we take the first child element; usually there should only be one anyways
        this._popoverInstance = new Popover(this.el.nativeElement);
        this._subscription =
            this._popoverInstance.anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)
                .subscribe(function () {
                // if a scroll event is detected, close the popover
                _this.ifOpenService.open = false;
            });
    };
    PopoverDirective.prototype.destroyPopover = function () {
        if (this._popoverInstance) {
            this._subscription.unsubscribe();
            this._popoverInstance.release();
            delete this._popoverInstance;
        }
    };
    PopoverDirective.prototype.ngOnDestroy = function () {
        this.destroyPopover();
    };
    return PopoverDirective;
}());
export { PopoverDirective };
PopoverDirective.decorators = [
    { type: Directive, args: [{ selector: "[clrPopoverAnchor]" },] },
];
/** @nocollapse */
PopoverDirective.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: IfOpenService, },
]; };
PopoverDirective.propDecorators = {
    'anchorElem': [{ type: Input, args: ["clrPopoverAnchor",] },],
    'anchorPoint': [{ type: Input, args: ["clrPopoverAnchorPoint",] },],
    'popoverPoint': [{ type: Input, args: ["clrPopoverPopoverPoint",] },],
    'popoverOptions': [{ type: Input, args: ["clrPopoverOptions",] },],
};
//# sourceMappingURL=popover.directive.js.map