/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, ElementRef, HostListener, Renderer2 } from "@angular/core";
import { IfOpenService } from "../../utils/conditional/if-open.service";
/*********
 *
 * @class SignpostTriggerDirective
 *
 * @Description
 * A Directive added to the Signpost Trigger button that will call the Signpost.toggle() function to hide/show the
 * SignpostContent.
 *
 */
var SignpostTriggerDirective = (function () {
    function SignpostTriggerDirective(ifOpenService, renderer, el) {
        var _this = this;
        this.ifOpenService = ifOpenService;
        this.renderer = renderer;
        this.el = el;
        this.subscriptions = [];
        this.subscriptions.push(this.ifOpenService.openChange.subscribe(function (isOpen) {
            if (isOpen) {
                _this.renderer.addClass(_this.el.nativeElement, "active");
            }
            else {
                _this.renderer.removeClass(_this.el.nativeElement, "active");
            }
        }));
    }
    SignpostTriggerDirective.prototype.ngOnDestroy = function () {
        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });
    };
    /**********
     * @function onSignpostTriggerClick
     *
     * @description
     * click handler for the Signpost trigger button used to hide/show SignpostContent.
     */
    SignpostTriggerDirective.prototype.onSignpostTriggerClick = function (event) {
        this.ifOpenService.toggleWithEvent(event);
    };
    return SignpostTriggerDirective;
}());
export { SignpostTriggerDirective };
SignpostTriggerDirective.decorators = [
    { type: Directive, args: [{ selector: "[clrSignpostTrigger]" },] },
];
/** @nocollapse */
SignpostTriggerDirective.ctorParameters = function () { return [
    { type: IfOpenService, },
    { type: Renderer2, },
    { type: ElementRef, },
]; };
SignpostTriggerDirective.propDecorators = {
    'onSignpostTriggerClick': [{ type: HostListener, args: ["click", ["$event"],] },],
};
//# sourceMappingURL=signpost-trigger.directive.js.map