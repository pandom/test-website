/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Input, Optional, SkipSelf } from "@angular/core";
import { IfOpenService } from "../../utils/conditional/if-open.service";
import { ROOT_DROPDOWN_PROVIDER, RootDropdownService } from "./providers/dropdown.service";
var Dropdown = (function () {
    function Dropdown(parent, ifOpenService, dropdownService) {
        var _this = this;
        this.parent = parent;
        this.ifOpenService = ifOpenService;
        this.isMenuClosable = true;
        this._subscription = dropdownService.changes.subscribe(function (value) { return _this.ifOpenService.open = value; });
    }
    Dropdown.prototype.ngOnDestroy = function () {
        this._subscription.unsubscribe();
    };
    return Dropdown;
}());
export { Dropdown };
Dropdown.decorators = [
    { type: Component, args: [{
                selector: "clr-dropdown",
                template: "<ng-content></ng-content>",
                host: {
                    "[class.dropdown]": "true",
                    // FIXME: remove this as soon as we stop supporting this old <div class="dropdown-menu"> syntax
                    "[class.open]": "ifOpenService.open"
                },
                providers: [IfOpenService, ROOT_DROPDOWN_PROVIDER]
            },] },
];
/** @nocollapse */
Dropdown.ctorParameters = function () { return [
    { type: Dropdown, decorators: [{ type: SkipSelf }, { type: Optional },] },
    { type: IfOpenService, },
    { type: RootDropdownService, },
]; };
Dropdown.propDecorators = {
    'isMenuClosable': [{ type: Input, args: ["clrCloseMenuOnItemClick",] },],
};
//# sourceMappingURL=dropdown.js.map