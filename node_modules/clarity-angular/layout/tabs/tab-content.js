/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Inject, Input, ViewChild } from "@angular/core";
import { IF_ACTIVE_ID, IfActiveService } from "../../utils/conditional/if-active.service";
import { AriaService } from "./aria-service";
var nbTabContentComponents = 0;
var TabContent = (function () {
    function TabContent(ifActiveService, id, ariaService) {
        this.ifActiveService = ifActiveService;
        this.id = id;
        this.ariaService = ariaService;
        if (!this.tabContentId) {
            this.tabContentId = "clr-tab-content-" + (nbTabContentComponents++);
        }
    }
    Object.defineProperty(TabContent.prototype, "ariaLabelledBy", {
        get: function () {
            return this.ariaService.ariaLabelledBy;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabContent.prototype, "tabContentId", {
        get: function () {
            return this.ariaService.ariaControls;
        },
        set: function (id) {
            this.ariaService.ariaControls = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabContent.prototype, "active", {
        get: function () {
            return this.ifActiveService.current === this.id;
        },
        enumerable: true,
        configurable: true
    });
    return TabContent;
}());
export { TabContent };
TabContent.decorators = [
    { type: Component, args: [{
                selector: "clr-tab-content",
                template: "\n        <ng-content></ng-content>\n    ",
                host: {
                    "[id]": "tabContentId",
                    "[attr.aria-labelledby]": "ariaLabelledBy",
                    "[attr.aria-hidden]": "!active",
                    "[attr.data-hidden]": "!active",
                    "role": "tabpanel"
                }
            },] },
];
/** @nocollapse */
TabContent.ctorParameters = function () { return [
    { type: IfActiveService, },
    { type: undefined, decorators: [{ type: Inject, args: [IF_ACTIVE_ID,] },] },
    { type: AriaService, },
]; };
TabContent.propDecorators = {
    'templateRef': [{ type: ViewChild, args: ["tabContentProjectedRef",] },],
    'tabContentId': [{ type: Input, args: ["id",] },],
};
//# sourceMappingURL=tab-content.js.map