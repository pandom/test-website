/*
 * Copyright (c) 2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ContentChild, Inject } from "@angular/core";
import { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from "../../utils/conditional/if-active.service";
import { AriaService } from "./aria-service";
import { TabContent } from "./tab-content";
import { TabLinkDirective } from "./tab-link.directive";
import { TabsService } from "./tabs-service";
var Tab = (function () {
    function Tab(ifActiveService, id, tabsService) {
        this.ifActiveService = ifActiveService;
        this.id = id;
        this.tabsService = tabsService;
        tabsService.register(this);
    }
    Tab.prototype.ngOnDestroy = function () {
        this.tabsService.unregister(this);
    };
    Object.defineProperty(Tab.prototype, "active", {
        get: function () {
            return this.ifActiveService.current === this.id;
        },
        enumerable: true,
        configurable: true
    });
    return Tab;
}());
export { Tab };
Tab.decorators = [
    { type: Component, args: [{
                selector: "clr-tab",
                template: "\n        <ng-content></ng-content>\n    ",
                providers: [IF_ACTIVE_ID_PROVIDER, AriaService]
            },] },
];
/** @nocollapse */
Tab.ctorParameters = function () { return [
    { type: IfActiveService, },
    { type: undefined, decorators: [{ type: Inject, args: [IF_ACTIVE_ID,] },] },
    { type: TabsService, },
]; };
Tab.propDecorators = {
    'tabLink': [{ type: ContentChild, args: [TabLinkDirective,] },],
    'tabContent': [{ type: ContentChild, args: [TabContent,] },],
};
//# sourceMappingURL=tab.js.map