var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { ChangeDetectorRef, Directive } from "@angular/core";
import { OompaLoompa } from "../../../utils/chocolate/oompa-loompa";
import { ExpandableRowsCount } from "../providers/global-expandable-rows";
import { DatagridWillyWonka } from "./datagrid-willy-wonka";
var ExpandableOompaLoompa = (function (_super) {
    __extends(ExpandableOompaLoompa, _super);
    function ExpandableOompaLoompa(cdr, willyWonka, expandableCount) {
        var _this = _super.call(this, cdr, willyWonka) || this;
        _this.expandableCount = expandableCount;
        return _this;
    }
    Object.defineProperty(ExpandableOompaLoompa.prototype, "flavor", {
        get: function () {
            return this.expandableCount.hasExpandableRow;
        },
        enumerable: true,
        configurable: true
    });
    return ExpandableOompaLoompa;
}(OompaLoompa));
export { ExpandableOompaLoompa };
ExpandableOompaLoompa.decorators = [
    { type: Directive, args: [{ selector: "clr-datagrid, clr-dg-row" },] },
];
/** @nocollapse */
ExpandableOompaLoompa.ctorParameters = function () { return [
    { type: ChangeDetectorRef, },
    { type: DatagridWillyWonka, },
    { type: ExpandableRowsCount, },
]; };
//# sourceMappingURL=expandable-oompa-loompa.js.map